# Start AeroSpace at login
start-at-login = true

# Define the bindings.
#
# NOTE: Unlike the default configuration, I don't use a "service" mode. Instead, I've remapped these
# configurations to simplify them
[mode.main.binding]

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# TODO: Come up with some way to open _the_ browser window in the current workspace. This can't be a
# different window, since I might want to work across multiple spaces. I _think_ I want something
# like a sticky window that I can optionally toggle on and off. However, I'm not sure.
#
# https://github.com/nikitabobko/AeroSpace/issues/2

alt-b = 'workspace Browser'
alt-c = ['workspace Calendar', 'exec-and-forget open -g -a Calendar']
alt-m = ['workspace Music', 'exec-and-forget open -g -a Spotify']
alt-n = ['workspace Notes', 'exec-and-forget open -g -a Obsidian']
alt-s = ['workspace Slack', 'exec-and-forget open -g -a Slack']
alt-t = ['workspace Terminal', 'exec-and-forget open -g -a iTerm']
alt-3 = 'workspace 3D_Printing'
alt-e = 'workspace Extra'

alt-shift-b = ['move-node-to-workspace Browser', 'workspace Browser']
alt-shift-c = [
  'move-node-to-workspace Calendar',
  'workspace Calendar',
  'exec-and-forget open -g -a Calendar',
]
alt-shift-m = [
  'move-node-to-workspace Music',
  'workspace Music',
  'exec-and-forget open -g -a Spotify',
]
alt-shift-n = [
  'move-node-to-workspace Notes',
  'workspace Notes',
  'exec-and-forget open -g -a Obsidian',
]
alt-shift-s = [
  'move-node-to-workspace Slack',
  'workspace Slack',
  'exec-and-forget open -g -a Slack',
]
alt-shift-t = [
  'move-node-to-workspace Terminal',
  'workspace Terminal',
  'exec-and-forget open -g -a iTerm',
]
alt-shift-3 = ['move-node-to-workspace 3D_Printing', 'workspace 3D_Printing']
alt-shift-e = ['move-node-to-workspace Extra', 'workspace Extra']

alt-tab = 'workspace-back-and-forth'
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# Join the layouts into containers.
ctrl-alt-shift-h = 'join-with left'
ctrl-alt-shift-j = 'join-with down'
ctrl-alt-shift-k = 'join-with up'
ctrl-alt-shift-l = 'join-with right'

# Reset the layout
ctrl-alt-shift-r = 'flatten-workspace-tree'

# Toggle fullscreen
alt-shift-f = 'fullscreen'

# Emulate macOS's built-in space switching shortcuts using my preferred workspaces order.
ctrl-left = 'exec-and-forget $HOME/.dotfiles/bin/aerospace/aerospace-switch-workspace prev'
ctrl-right = 'exec-and-forget $HOME/.dotfiles/bin/aerospace/aerospace-switch-workspace next'

# Add shortcuts to quickly switch my browser to different workspaces.
#
# TODO: Come up with better shortcuts.
alt-shift-6 = 'exec-and-forget $HOME/.dotfiles/bin/aerospace/aerospace-move-application-to-workspace Arc Browser'
alt-shift-7 = 'exec-and-forget $HOME/.dotfiles/bin/aerospace/aerospace-move-application-to-workspace Arc Terminal'
alt-shift-8 = 'exec-and-forget $HOME/.dotfiles/bin/aerospace/aerospace-move-application-to-workspace Arc Slack'

# Automatically move some applications to specific workspaces.

[[on-window-detected]]
if.app-id = 'com.apple.iCal'
run = 'move-node-to-workspace Calendar'

[[on-window-detected]]
if.app-id = 'com.spotify.client'
run = 'move-node-to-workspace Music'

[[on-window-detected]]
if.app-id = 'md.obsidian'
run = 'move-node-to-workspace Notes'

[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run = 'move-node-to-workspace Slack'

[[on-window-detected]]
if.app-id = 'com.googlecode.iterm2'
run = 'move-node-to-workspace Terminal'

[[on-window-detected]]
if.app-id = 'com.softfever3d.orca-slicer'
run = 'move-node-to-workspace 3D_Printing'

# Automatically float some applications.

[[on-window-detected]]
if.app-id = 'com.1password.1password'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.FaceTime'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
run = 'layout floating'

# TODO: Create multiple "layouts", where each application arranges itself to a different workspace.
# Layouts are togglable, and example of one might be one window per workspacce.
