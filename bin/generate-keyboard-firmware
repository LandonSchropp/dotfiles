#!/usr/bin/env ruby

# frozen_string_literal: true

require "fileutils"
require "tmpdir"
require "yaml"

REPO = "KinesisCorporation/Adv360-Pro-ZMK.git"
IGNORED_CHARACTERS = /[^\w& ]+/

def system(command)
  unless Kernel.system(command, out: $stdout, err: $stderr)
    puts "\n☠️  Command failed: '#{command}'"
    exit(1)
  end
end

# Download the Kinesis repository.
repo_directory = Dir.mktmpdir("Adv360-Pro-ZMK")
puts "🐈 Cloning Kinesis Advantage 360 Pro ZMK repo...\n\n"
system("git clone git@github.com:#{REPO} #{repo_directory}")

# Ensure the repository is cleaned up once the script is done running.
at_exit do
  puts "\n🗑  Removing repository directory."
  FileUtils.rm_rf(repo_directory)
end

# Write the config file.
puts "\n✍️  Copying config.\n\n"
source_path = File.join(File.dirname(__FILE__), "../advantage-360.keymap")
destination_path = File.join(repo_directory, "config/adv360.keymap")
FileUtils.cp(source_path, destination_path)

# Generate the ZMK firmware.
puts "🔨 Building the ZMK firmware...\n\n"
Dir.chdir(repo_directory)
system("bash -c 'make all'")

# Copy the firmware to the keyboard directory.
puts "\n🐑 Copying the firmware build files to the dotfiles.\n\n"

Dir[File.join(repo_directory, "firmware/*")].each do
  FileUtils.mkdir_p(File.join(__dir__, "../firmware"))
  firmware_path = File.join(__dir__, "../firmware", File.basename(_1).sub(/^.*-/, ""))
  FileUtils.cp(_1, firmware_path)
end

# Let the user know the script has completed.
puts "✅ Done."
