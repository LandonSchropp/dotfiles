" This defines my personal Vim color scheme customizations.

" GUI color definitions
" TODO: The major issue with this is the cterm codes don't match the orger of the colors. This needs
" to be an array of objects instead, with the cterm color and gui color as keys.
let s:colors = [
\   { "gui": "#<%- base["00"]["hex"] %>", "cterm": 0 },
\   { "gui": "#<%- base["08"]["hex"] %>", "cterm": 1 },
\   { "gui": "#<%- base["0B"]["hex"] %>", "cterm": 2 },
\   { "gui": "#<%- base["0A"]["hex"] %>", "cterm": 3 },
\   { "gui": "#<%- base["04"]["hex"] %>", "cterm": 4 },
\   { "gui": "#<%- base["0D"]["hex"] %>", "cterm": 5 },
\   { "gui": "#<%- base["0E"]["hex"] %>", "cterm": 6 },
\   { "gui": "#<%- base["0C"]["hex"] %>", "cterm": 7 },
\   { "gui": "#<%- base["03"]["hex"] %>", "cterm": 8 },
\   { "gui": "#<%- base["09"]["hex"] %>", "cterm": 9 },
\   { "gui": "#<%- base["01"]["hex"] %>", "cterm": 10 },
\   { "gui": "#<%- base["02"]["hex"] %>", "cterm": 11 },
\   { "gui": "#<%- base["04"]["hex"] %>", "cterm": 12 },
\   { "gui": "#<%- base["06"]["hex"] %>", "cterm": 13 },
\   { "gui": "#<%- base["0F"]["hex"] %>", "cterm": 14 },
\   { "gui": "#<%- base["07"]["hex"] %>", "cterm": 15 }
\ ]

" Set and override the colors for different groups
call <sid>highlight("Cursor", { "foreground": 0, "background": 7 })
call <sid>highlight("CursorLine", { "background": 13 })
call <sid>highlight("CursorLine", { "background": 13 })
call <sid>highlight("iCursor", { "foreground": 0, "background": 15 })
call <sid>highlight("Visual", { "foreground": 0 })
call <sid>highlight("WildMenu", { "foreground": 15 })
call <sid>highlight("Folded", { "foreground": 0 })
call <sid>highlight("FoldColumn", { "foreground": 0 })
call <sid>highlight("DiffAdd", { "foreground": 0 })
call <sid>highlight("DiffChange", { "foreground": 0 })
call <sid>highlight("DiffDelete", { "foreground": 0 })
call <sid>highlight("Search", { "background": 13 })
call <sid>highlight("SignColumn", { "foreground": 0 })
call <sid>highlight("SpellBad", { "foreground": 0 })
call <sid>highlight("SpellCap", { "foreground": 0 })
call <sid>highlight("SpellRare", { "foreground": 0 })
call <sid>highlight("PmenuSbar", { "foreground": 0 })
call <sid>highlight("CursorColumn", { "foreground": 0 })
call <sid>highlight("ColorColumn", { "background": 13 })
call <sid>highlight("Todo", { "foreground": 6, "background": 15, "attr": "reverse" })
call <sid>highlight("Comment", { "attr": "italic" })
call <sid>highlight("Italic", { "attr": "italic" })

" NOTE: The reverse attribute fixes the issue where the cursorline overrides the background color.
call <sid>highlight("Error", { "foreground": 1, "background": 13, "attr": "reverse" })
call <sid>highlight("Warning", { "foreground": 3, "background": 13, "attr": "reverse" })

function <sid>airlineColorArray(foreground, background)
  return [
  \   s:colors[a:foreground]["gui"],
  \   s:colors[a:background]["gui"],
  \   s:colors[a:foreground]["cterm"],
  \   s:colors[a:background]["cterm"]
  \ ]
endfunction

let g:airline#themes#custom#palette = {}

let s:N1 = <sid>airlineColorArray(0, 15)
let s:N2 = <sid>airlineColorArray(0, 13)
let s:N3 = <sid>airlineColorArray(0, 7)
let g:airline#themes#custom#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)

let s:I1 = <sid>airlineColorArray(0, 2)
let s:I2 = <sid>airlineColorArray(0, 13)
let s:I3 = <sid>airlineColorArray(0, 7)
let g:airline#themes#custom#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)
let g:airline#themes#custom#palette.replace = copy(g:airline#themes#custom#palette.insert)

let s:V1 = <sid>airlineColorArray(0, 3)
let s:V2 = <sid>airlineColorArray(0, 13)
let s:V3 = <sid>airlineColorArray(0, 7)
let g:airline#themes#custom#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)

let s:A1 = <sid>airlineColorArray(0, 1)
let s:A2 = <sid>airlineColorArray(0, 13)
let s:A3 = <sid>airlineColorArray(0, 7)
let g:airline#themes#custom#palette.inactive = airline#themes#generate_color_map(s:A1, s:A2, s:A3)

let g:airline_theme="custom"
